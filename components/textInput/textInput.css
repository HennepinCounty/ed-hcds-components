.hc-form-element {
  margin-top: 1.2rem;
}

/* This could be used as a wrapper to create consistent spacing for a group of form elements*/
/* Would need to create example of this */
/* Would want to rename to "hc-form-wrapper" or something to make it more generic (can be used with radios, checklist, etc -- all should probably have the same gap between each other) */
/* this also might be done through ".hc-form-element + .hc-form-element" */
/* Or because .hc-form-element already adds margin-top, this might not be needed at all (spacing would be determined by top-margin of object instead of gap assigned by parent container) */
.hc-input-wrapper {
  display: flex;
  flex-direction: column;
  gap: var(--hc-spacing-03);
}

/* Different version of hc-input-wrapper, does the exact same thing with margin instead of gap */
/* One or both of these methods should be deleted */
/* Prefer to use hc-form-group because it matches Govuk as a reference */
.hc-form-group {
  display: block;
  margin-bottom: 32px;
}

/* Styling for label above text field */
/* Set to display:block so that label is above the field */

/* Label styling moved to _typography.scss */

/* Styling for field */
.hc-input {
  height: 40px;
  height: var(--hc-height--medium);
  border-radius: var(--hc-border-radius-02);
  padding: var(--hc-spacing-02);
  border: 2px solid var(--hc-field-border-color);
}

/* Text inside of input field */
input.hc-input[type="text"] {
  font-family: var(--hc-font-family);
  font-size: var(--hc-font-body-size-regular);
  font-style: normal;
  color: var(--hc-text-primary, #171a1d);
  font-weight: 400;
  line-height: 100%;
}

/* error state for field, adds border and icon */
.hc-input--error {
  border: 2px solid var(--hc-border-color-error);
  background: no-repeat center right;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 -960 960 960'><path fill='%23ce1432' d='m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z'></path></svg>");
  background-size: 32px;
}

/* Focus state, changes border color to white then adds blue stroke with outline to give appearance of growing on focus */
.hc-input:focus {
  border: var(--hc-border-style-focus);
  outline: var(--hc-outline-style-focus);
}
